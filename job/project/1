#!/usr/bin/python3
# app/__init__.py
# app/__init__.py
import logging
from logging.handlers import RotatingFileHandler
from flask import Flask
from config import Config
from app.models import db
from flask import Flask, render_template, request 

app = Flask(__name__)
app.config.from_object(Config)
# Configuration du journal
handler = RotatingFileHandler('/home/code/zack/project/app.log', maxBytes=10000, backupCount=1)
handler.setLevel(logging.INFO)
app.logger.addHandler(handler)
print(app.config['SQLALCHEMY_DATABASE_URI'])
# Gestionnaire d'erreurs pour intercepter les erreurs HTTP
@app.errorhandler(404)
def not_found_error(error):
    app.logger.error('Page non trouvée: %s', (request.path,))
    return render_template('404.html'), 404

@app.errorhandler(500)
def internal_error(error):
    app.logger.error('Erreur interne du serveur: %s', (error,))
    db.session.rollback()  # Rollback de la transaction en cas d'erreur interne
    return render_template('500.html'), 500
# Initialisation de la base de données
#db = SQLAlchemy(app)
db.init_app(app)

from app import views

